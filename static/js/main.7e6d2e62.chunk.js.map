{"version":3,"sources":["redux/slices/InputSlices.js","redux/slices/WeatherSlices.js","redux/slices/WeatherCastSlices.js","components/Input.js","redux/slices/FavoritesSlices.js","components/CurrentWeather.js","components/ForecastCard.js","components/Forecast.js","components/Home.js","components/NavBar.js","components/Favorites.js","App.js","redux/store/Store.js","index.js"],"names":["fetchInputAction","createAsyncThunk","payload","a","rejectWithValue","getState","dispatch","axios","get","data","response","inputSlice","createSlice","name","initialState","input","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","error","undefined","rejected","fetchWeatherAction","weatherSlice","weather","fetchWeatherCastAction","weatherCastSlices","Input","handleCityHeader","useState","value","setValue","city","setCity","useSelector","inputState","useDispatch","useEffect","map","c","LocalizedName","className","face","style","color","fontSize","onSubmit","e","preventDefault","Key","onChange","target","list","type","id","uuid","background","favoritesSlice","myFavorites","reducers","addFavorite","tep","removeFavorite","actions","CurrentWeather","cityHeader","weatherState","onClick","src","alt","WeatherText","WeatherIcon","width","ForecastCard","dayForcaste","Date","Day","Temperature","Icon","IconPhrase","Maximum","weekDayName","moment","format","Math","floor","Value","Forecast","setForecast","weatherCastState","DailyForecasts","day","Home","setCityHeader","NavBar","height","to","href","Favorites","favorites","setFavorites","favoritesState","f","updateState","filter","r","handleRemove","App","exact","path","component","store","configureStore","reducer","inputReducer","weatherReducer","weatherCastReducer","favoritesReducer","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e6d2e62.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchInputAction = createAsyncThunk(\r\n    'input/fetch',\r\n    async (payload, { rejectWithValue, getState, dispatch }) => {\r\n        try {\r\n            const { data } = await axios.get(`/locations/v1/cities/autocomplete?apikey=t2uuMTU2t3tDOClNXMfqTAo7UjGEJfYC&q=${payload}`);\r\n            return data;\r\n        } catch (error) {\r\n            if (!error?.response) {\r\n                throw error\r\n            }\r\n            return rejectWithValue(error?.response?.data);\r\n        }\r\n    }\r\n);\r\n\r\nconst inputSlice = createSlice({\r\n    name: 'input',\r\n    initialState: {input:[]},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchInputAction.pending, (state, action) => {\r\n            state.loading = true;\r\n        });\r\n        builder.addCase(fetchInputAction.fulfilled, (state, action) => {\r\n            state.input = action?.payload;\r\n            state.loading = false;\r\n            state.error = undefined;\r\n        });\r\n        builder.addCase(fetchInputAction.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.input = undefined;\r\n            state.error = action?.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport default inputSlice.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchWeatherAction = createAsyncThunk(\r\n    'weather/fetch',\r\n    async (payload, { rejectWithValue, getState, dispatch }) => {\r\n        try {\r\n            const { data } = await axios.get(`/currentconditions/v1/${payload}?apikey=t2uuMTU2t3tDOClNXMfqTAo7UjGEJfYC`);\r\n            return data;\r\n        } catch (error) {\r\n            if (!error?.response) {\r\n                throw error\r\n            }\r\n            return rejectWithValue(error?.response?.data);\r\n        }\r\n    }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n    name: 'weather',\r\n    initialState: {weather:'loading'},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchWeatherAction.pending, (state, action) => {\r\n            state.loading = true;\r\n        });\r\n        builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\r\n            state.weather = action?.payload;\r\n            state.loading = false;\r\n            state.error = undefined;\r\n        });\r\n        builder.addCase(fetchWeatherAction.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.weather = undefined;\r\n            state.error = action?.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport default weatherSlice.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchWeatherCastAction = createAsyncThunk(\r\n    'weatherCast/fetch',\r\n    async (payload, { rejectWithValue, getState, dispatch }) => {\r\n        try {\r\n            const { data } = await axios.get(`/forecasts/v1/daily/5day/${payload}?apikey=t2uuMTU2t3tDOClNXMfqTAo7UjGEJfYC`);\r\n            return data;\r\n        } catch (error) {\r\n            if (!error?.response) {\r\n                throw error\r\n            }\r\n            return rejectWithValue(error?.response?.data);\r\n        }\r\n    }\r\n);\r\n\r\nconst weatherCastSlices = createSlice({\r\n    name: 'weatherCast',\r\n    initialState: {weather:'loading'},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchWeatherCastAction.pending, (state, action) => {\r\n            state.loading = true;\r\n        });\r\n        builder.addCase(fetchWeatherCastAction.fulfilled, (state, action) => {\r\n            state.weather = action?.payload;\r\n            state.loading = false;\r\n            state.error = undefined;\r\n        });\r\n        builder.addCase(fetchWeatherCastAction.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.weather = undefined;\r\n            state.error = action?.payload;\r\n        });\r\n    },\r\n});\r\n\r\nexport default weatherCastSlices.reducer;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uuid } from 'uuidv4';\r\nimport { fetchInputAction } from '../redux/slices/InputSlices';\r\nimport { fetchWeatherAction } from '../redux/slices/WeatherSlices';\r\nimport { fetchWeatherCastAction } from '../redux/slices/WeatherCastSlices';\r\n\r\nconst Input = ({handleCityHeader}) => {\r\n\r\n    const [value, setValue] = useState({});\r\n    const [city, setCity] = useState([]);\r\n\r\n    const {input} = useSelector((state) => state.inputState);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchInputAction('Tel Aviv'));\r\n        setCity(input.map(c => c.LocalizedName));\r\n    },[]);\r\n   \r\n    useEffect(() => {\r\n        dispatch(fetchInputAction(value));\r\n        setCity(input.map(c => c.LocalizedName));\r\n    },[value]);\r\n\r\n\r\n    // //handle dataList arr..............\r\n    useEffect(() => {\r\n            setCity(input.map(c => c.LocalizedName));\r\n    },[input])\r\n\r\n    const handleChange = (e) => setValue(e.target.value);\r\n        \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleCityHeader(input)\r\n        dispatch(fetchWeatherAction(input[0].Key));\r\n        dispatch(fetchWeatherCastAction(input[0].Key));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='row mt-4'>\r\n                <font face=\"Sedgwick Ave\">\r\n                    <h1 className='m-5' style={{color:'white', fontSize:'4rem'}}>Always chase the weather...</h1>\r\n                </font>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"mx-5\">\r\n                <div className='row'>\r\n                    <div className='col-md-3'></div>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        name='city'\r\n                        list='cityList'\r\n                        type=\"text\"\r\n                        className=\"form-control rounded-pill col\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    />\r\n                    <datalist id='cityList' className='rounded-pill'>\r\n                        {city.map(c => <option key={uuid()}>{c}</option>)}\r\n                    </datalist>\r\n                    <div className='col-md-3'></div>\r\n                </div>\r\n                <div className='row' >\r\n                        <button type=\"submit\" className=\"btn mx-auto col-md-4 mt-4 rounded-pill\" style={{background:'DarkTurquoise'}}>\r\n                        <font face=\"Sedgwick Ave\">chase the weather</font></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Input;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uuid } from 'uuidv4';\r\n\r\n\r\nexport const favoritesSlice = createSlice({\r\n    name: 'favoritesArr',\r\n    initialState: {\r\n        myFavorites: []\r\n    },\r\n    reducers: {\r\n        addFavorite: (state) => {\r\n            state.myFavorites = [...state.myFavorites, {id:uuid(), city:'natanya', tep: 100}]\r\n        },\r\n        //return an empty \"proxy\", can't figure out why...\r\n        removeFavorite: (state, action) => {\r\n            state.myFavorites = action.payload\r\n        }\r\n    }\r\n});\r\n\r\nexport const {addFavorite,removeFavorite} = favoritesSlice.actions;\r\nexport default favoritesSlice.reducer;\r\n","import React, {useEffect,useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchWeatherAction} from '../redux/slices/WeatherSlices';\r\nimport {fetchInputAction} from '../redux/slices/InputSlices';\r\nimport {addFavorite} from '../redux/slices/FavoritesSlices';\r\n\r\nconst CurrentWeather = ({cityHeader}) => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const weatherState = useSelector((state) => state.weatherState);\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchWeatherAction(\"215854\"));\r\n    },[]);\r\n    \r\n    useEffect(() => {\r\n    },[weatherState])\r\n            \r\n    return ( \r\n        <div className='container mt-5 '>\r\n            {weatherState.weather !== 'loading' ?\r\n            <div className='row '>\r\n                <div className='col-md-8'>\r\n                    <button\r\n                        onClick={() => dispatch(addFavorite())}\r\n                        className='btn btn-link text-decoration-none offset-md-1 pointer-events none'\r\n                        style={{color:'white'}}>\r\n                        <p><img src=\"https://img.icons8.com/color/48/000000/like--v3.png\" alt=''/>Add to favorites</p>\r\n                    </button>\r\n                    <font face=\"Sedgwick Ave\">\r\n                        <h1 className='offset-md-3 fw-bold' >Welcome to <span style={{color:'DarkOrange',fontSize:'4rem'}}> {cityHeader}</span> Forecast</h1>\r\n                    </font>\r\n                    <h4 className='offset-md-4'>{weatherState.weather[0].WeatherText}</h4>\r\n                </div>\r\n                <div className='col-md-1 '>\r\n                    <img src={`https://www.accuweather.com/images/weathericons/${weatherState.weather[0].WeatherIcon}.svg`}\r\n                        alt='icon' style={{width:'180px'}}\r\n                        className='mt-5 offset-md-3'/>\r\n                </div>\r\n                <hr className='mt-4'/>\r\n            </div>\r\n             : \r\n             <h1>Loading...</h1> \r\n         } \r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default CurrentWeather;\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ForecastCard = ({dayForcaste}) => {\r\n    \r\n    const {Date,Day,Temperature} = dayForcaste;\r\n    const {Icon,IconPhrase} = Day;\r\n    const {Maximum} = Temperature;\r\n    \r\n    var weekDayName =  moment(Date).format('dddd');\r\n \r\n        return (\r\n            <div className='col-md'>\r\n                <h2 className=\"\">\r\n                    {Math.floor((Maximum.Value-32)*0.5556)}°C\r\n                    <img src={`https://www.accuweather.com/images/weathericons/${Icon}.svg`} className=\"offset-md-1\"  style={{width:'6vw'}}  alt=\"weather\" />\r\n                </h2>\r\n                <h4 className=\"\">{weekDayName}</h4>\r\n                <p>{IconPhrase}</p>\r\n            </div>\r\n        );\r\n    }\r\n \r\nexport default ForecastCard;","import React, {useEffect,useState} from 'react';\r\nimport ForecastCard from './ForecastCard';\r\nimport { uuid } from 'uuidv4';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchWeatherCastAction} from '../redux/slices/WeatherCastSlices';\r\n\r\n\r\nconst Forecast = () => {\r\n\r\n    const [forecast,setForecast] = useState('loading')\r\n    \r\n    const dispatch = useDispatch();\r\n    const weatherCastState = useSelector((state) => state.weatherCastState);\r\n   \r\n    useEffect(() => {\r\n        dispatch(fetchWeatherCastAction(\"215854\"))\r\n    },[]);\r\n    \r\n    useEffect(() => {\r\n        setForecast(weatherCastState)\r\n    },[weatherCastState]);\r\n\r\n    return ( \r\n            <div className='container mt-4 p-5' style={{background:'rgba(255,255,255, 0.3)'}}>\r\n                { weatherCastState.weather !== 'loading' ?\r\n                    <div className='row  gx-0'>\r\n                        {weatherCastState.weather.DailyForecasts.map(day => <ForecastCard key={uuid()} dayForcaste={day}/>)}\r\n                    </div>\r\n                :\r\n                <h1>Loading...</h1>\r\n            }\r\n            </div>\r\n         );\r\n    }\r\n     \r\n\r\nexport default Forecast;","import React, {useState} from 'react';\r\nimport Input from './Input';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport Forecast from './Forecast';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Home = () => {\r\n\r\n    const [cityHeader, setCityHeader] = useState('Tel aviv');\r\n    const inputState = useSelector((state) => state.inputState);\r\n\r\n    const handleCityHeader = (cityHeader) => {\r\n        setCityHeader(inputState.input[0].LocalizedName);\r\n    }\r\n    return ( \r\n        <div className='container mt-3 bg'>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                    <Input handleCityHeader={handleCityHeader} />\r\n                    <CurrentWeather cityHeader={cityHeader} />\r\n                    <Forecast />\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light shadow-sm\" style={{height:'8vh'}}>\r\n          <div className=\"container-fluid\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav mx-auto\" style={{fontSize:'1.2rem'}}>\r\n                <li className=\"nav-item mx-5\">\r\n                  <Link to='/' className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item me-5\">\r\n                  <Link to='/favorites' className=\"nav-link\" href=\"#\">Favorites</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import React, {useState,useEffect} from 'react';\r\nimport { uuid } from 'uuidv4';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {removeFavorite} from '../redux/slices/FavoritesSlices';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Favorites = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [favorites, setFavorites] = useState([]);\r\n    const {myFavorites} = useSelector((state) => state.favoritesState);\r\n    const weatherCastState = useSelector((state) => state.weatherCastState);\r\n\r\n    const {Day, Temperature} = weatherCastState.weather.DailyForecasts[0];\r\n    const {Icon,IconPhrase} = Day;\r\n    const {Maximum} = Temperature;\r\n \r\n    useEffect(() => {\r\n        setFavorites(() =>myFavorites)\r\n    },[favorites])\r\n\r\n    const handleRemove = (id) => {\r\n        //return an empty obj with \"proxy\" cause of am high order object... cant resolve :(\r\n        const updateState = favorites.filter(r => id !== r.id);\r\n        dispatch(removeFavorite(updateState));\r\n    }\r\n    \r\n    return ( \r\n        <div className='container mt-5 bg' style={{height:'83vh'}}>\r\n            <div className='row '>\r\n                <font face=\"Sedgwick Ave\">\r\n                    <h1 className='mt-5 offset-md-1' style={{color:'white',fontSize:'4rem'}}>My Favorites</h1>\r\n                </font>\r\n            </div>\r\n            <font face=\"Sedgwick Ave\" className='d-flex align-content-end flex-wrap'>\r\n                {favorites.map(f => {\r\n                    return(\r\n                        <Link to='/' className=\"nav-link active\" aria-current=\"page\" href=\"#\" key={uuid()}>\r\n                            <div className=\"card d-flex align-items-center mt-3 mx-3\" style={{width: \"15rem\",background:'rgba(255,255,255, 0.3)',color:'white'}}>\r\n                                <div className=\"card-body\">\r\n                                    <h2 className=\"card-title \" style={{color:'DarkOrange'}}>{f.city}</h2>\r\n                                    <h2 className=\"\">\r\n                                    {Math.floor((Maximum.Value-32)*0.5556)}°C\r\n                                        <img src={`https://www.accuweather.com/images/weathericons/${Icon}.svg`} className=\"offset-md-1\"  style={{width:'6vw'}}  alt=\"weather\" />\r\n                                    </h2>\r\n                                    <button onClick={() => handleRemove(f.id)} className=\"btn mt-3 rounded-pill \" style={{background:'DarkTurquoise'}}>remove from favorites</button>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </font>\r\n        </div>\r\n        \r\n    );\r\n}\r\n \r\nexport default Favorites;","\nimport './App.css';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport Favorites from './components/Favorites';\nimport {Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n      <div >\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/favorites' component={Favorites} />\n          </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport weatherReducer from '../slices/WeatherSlices';\r\nimport weatherCastReducer from '../slices/WeatherCastSlices';\r\nimport inputReducer from '../slices/InputSlices';\r\nimport favoritesReducer from '../slices/FavoritesSlices';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        inputState: inputReducer,\r\n        weatherState: weatherReducer,\r\n        weatherCastState: weatherCastReducer,\r\n        favoritesState: favoritesReducer,\r\n    }\r\n},composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery';\nimport 'popper.js/dist/popper';\nimport 'bootstrap/dist/js/bootstrap';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/Store';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}